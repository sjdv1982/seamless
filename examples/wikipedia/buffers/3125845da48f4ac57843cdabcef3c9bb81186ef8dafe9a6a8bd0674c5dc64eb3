Module(body=[FunctionDef(name='count_vowels', args=arguments(posonlyargs=[], args=[arg(arg='abstracts')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Import(names=[alias(name='re')]), Import(names=[alias(name='xml.etree.ElementTree', asname='ET')]), ImportFrom(module='io', names=[alias(name='BytesIO')], level=0), Assign(targets=[Name(id='abstracts_reader', ctx=Store())], value=Call(func=Name(id='BytesIO', ctx=Load()), args=[Name(id='abstracts', ctx=Load())], keywords=[])), Assign(targets=[Name(id='vowels', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='[aeiou]')], keywords=[])), Assign(targets=[Name(id='count', ctx=Store())], value=Constant(value=0)), For(target=Tuple(elts=[Name(id='event', ctx=Store()), Name(id='elem', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='ET', ctx=Load()), attr='iterparse', ctx=Load()), args=[Name(id='abstracts_reader', ctx=Load())], keywords=[keyword(arg='events', value=List(elts=[Constant(value='end')], ctx=Load()))]), body=[Try(body=[If(test=Compare(left=Attribute(value=Name(id='elem', ctx=Load()), attr='tag', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='abstract')]), body=[Continue()], orelse=[]), Assign(targets=[Name(id='text', ctx=Store())], value=Attribute(value=Name(id='elem', ctx=Load()), attr='text', ctx=Load())), If(test=Compare(left=Name(id='text', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Continue()], orelse=[]), If(test=Call(func=Attribute(value=Name(id='text', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='|')], keywords=[]), body=[Continue()], orelse=[]), AugAssign(target=Name(id='count', ctx=Store()), op=Add(), value=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='findall', ctx=Load()), args=[Name(id='vowels', ctx=Load()), Name(id='text', ctx=Load())], keywords=[])], keywords=[]))], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='elem', ctx=Load()), attr='clear', ctx=Load()), args=[], keywords=[]))])], orelse=[]), Return(value=Name(id='count', ctx=Load()))], decorator_list=[])], type_ignores=[])