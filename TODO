TODO before 0.12 release: 

- Add singularity support for bashdocker jobs. DONE

- Fix https://github.com/sjdv1982/seamless/issues/246 (both issues). DONE

- Test the fair server (fairdir: /mnt/external-disk/reproducible-pdb/fairdir . Add ../buffers and ../deepbuffers as well in the test). Rip the RPBS fairserver, create add_fairserver API. With this, adapt and test
reproducible PDB viewer and deepcell-pdb / deepfolder-pdb (both with RPBS and local fairserver). TODO
(partially DONE)

- Add bufferdir-deploy-deepfolder tool (checksum => ./deployed/<folder>, either hardlinks or softlinks into bufferdir). DONE.

- Make sure that bash jobs with a buffer read folder have get_filename working directory. Rip filezones. Use bufferdir_deploy_deepfolder, then test get_directory feature. Test with /bin/seamless as well! DONE.

- Make sure that save_vault respects scratch (i.e. make it behave the same as buffer_remote.write). Document the vault + database path as a valid (advanced-use) setup. Rip the warning in init_database_from_env, refactor/document API. TODO

- Re-review new-project, add delegation? UPDATE: read some settings from a project.yaml... TODO

- Clean up seamless-tools/database-* tools: DONE

- revive database-run-actions. DONE.

- Re-run pin-filesystem.sh tests. DONE

- Run tests/examples requiring serve-graph, add seamless.delegate if needed TODO

- Make sure the examples can function without RPBS buffer server, or add it in the notebook. DONE

======================

- Clean up and re-run all tests.

- Documentation. 

- Document: buffer read servers/folders fail silently, the buffer write server must succeed

- General documentation, describing the three styles. Old TODO entries have been added to the Seamless Documentation issue.

- For seamless-cli, when distributing, be sure to add hashserver to the cli directory. No deps since they are inside the Dockerfile.

- Make a separate conda package for bin/seamless. 
Add seamless-upload, seamless-upload-zip, seamless-upload-vault and seamless-download as copies of seamless-tools/scripts/upload.py etc.,
rather than the Docker wrappers of seamless-cli/seamless-upload etc.
