environment7: requires full delegation. micro-assistant will not work out-of-the-box. Can also be run non-automatically, see below.
imperative-environment: Will take ~15 minutes to run (faster if GPU available). Requires full delegation. micro-assistant will not work out-of-the-box
environment7a: version of environment7 where the conda environment name is specified. Will work with the mini-assistant if the environment "pytorch-seamless" is present 
environment7b: version of environment7 where the Docker image name is specified. Will work with the mini-assistant if the Docker image "seamless-devel-pytorch" is present, which can be built using environment7b.Dockerfile
eager: FAILS as of 0.7 (https://github.com/sjdv1982/seamless/issues/90)
help: Can also be run interactively with IPython. See the source code for mounts and shares
webinterface.sh: open with bash inside the Seamless Docker container.
                 Can also be run interactively, see line 6 of the code
meta-local: 1. run without jobless/jobslave:                        #1 succeed, #2 fail, #3 fail
            2. run with --communion and a jobslave:                 #1 succeed, #2 succeed, #3 succeed
                See test-outputs/meta-local.log
            3. run with --communion --database and jobless:         #1 succeed, #2 succeed, #3 fail
            Database can be cleaned with: 
              seamless-delete-database-from-log test-outputs/meta-local.log
              (outside the Docker container)
             python3 ~/seamless-scripts/delete-database-from-log.py test-outputs/meta-local.log
              (inside the Docker container)
deepcell-pdb: requires a FAIR server that knows the PDB dataset
                 Can also be run interactively, change ctx.pdb_code 
                  and observe /tmp/pdb_structure.mmcif
deepfolder-pdb: See above . change ctx.pdb_code to "1wej.cif", "1brs.cif" or "7cei.cif" 
                Also, /tmp/pdb_folder will contain 1brs.cif, 1wej.cif and 7cei.cif.
high-in-low4-memory    # Quite long test.
                          # Creates 5.6 GB of buffer cache in /tmp/dummy-db
                          # Run with rm -rf /tmp/dummy-db  && mkdir -p /tmp/dummy-db && seamless-database dummydb-config.yaml
                          # Time is ~100 seconds, or ~60 seconds when re-executed
                          # Re-executing the test is faster, because the transformation results and input buffers are cached
                          # Exact output will depend on timings
                          # After the test, "rm -rf /tmp/dummy-db && docker stop seamless-database-container"
high-in-low6-memory    # See above. Time is ~60 seconds, or ~35 seconds when re-executed
map-speed-test: long test, calculates the speed of stdlib.map_dict
map-speed-test2: long test, calculates the speed of stdlib.map_dict_chunk
  This test takes 10-20 minutes
  Need to choose a version (non-reproducibility issue)
    Both versions built using seamless-tools/build-devel-env.sh, seamless-tools commit 22823492f5ab42a5cfb77fc030fcfc126b5d2907
    version 1: 
      Intel Xeon Skylake, Ubuntu 18.04
      Supported SIMD extensions in this NumPy install:
        baseline = SSE,SSE2,SSE3
        found = SSSE3,SSE41,POPCNT,SSE42,AVX,F16C,FMA3,AVX2,AVX512F,AVX512CD,AVX512_SKX
        not found = AVX512_CLX,AVX512_CNL,AVX512_ICL
    version 2:
      Intel i5-1235U, Ubuntu 22.04
      Supported SIMD extensions in this NumPy install:
          baseline = SSE,SSE2,SSE3
          found = SSSE3,SSE41,POPCNT,SSE42,AVX,F16C,FMA3,AVX2
          not found = AVX512F,AVX512CD,AVX512_SKX,AVX512_CLX,AVX512_CNL,AVX512_ICL    
  (Using NPY_DISABLE_CPU_FEATURES does not have an effect)  
   run as "cd scratch-provenance/version; ./run.sh". Requires delegation to be startable from command line ("seamless-delegate" etc. must be available)

scratch-provenance: 
  This test takes 10-20 minutes
  Need to choose a version (non-reproducibility issue)
    Both versions built using seamless-tools/build-devel-env.sh, seamless-tools commit 22823492f5ab42a5cfb77fc030fcfc126b5d2907
    version 1: 
      Intel Xeon Skylake, Ubuntu 18.04
      Supported SIMD extensions in this NumPy install:
        baseline = SSE,SSE2,SSE3
        found = SSSE3,SSE41,POPCNT,SSE42,AVX,F16C,FMA3,AVX2,AVX512F,AVX512CD,AVX512_SKX
        not found = AVX512_CLX,AVX512_CNL,AVX512_ICL
    version 2:
      Intel i5-1235U, Ubuntu 22.04
      Supported SIMD extensions in this NumPy install:
          baseline = SSE,SSE2,SSE3
          found = SSSE3,SSE41,POPCNT,SSE42,AVX,F16C,FMA3,AVX2
          not found = AVX512F,AVX512CD,AVX512_SKX,AVX512_CLX,AVX512_CNL,AVX512_ICL    
  (Using NPY_DISABLE_CPU_FEATURES does not have an effect)  
   run as "cd scratch-provenance/version; ./run.sh". Requires delegation to be startable from command line ("seamless-delegate" etc. must be available)