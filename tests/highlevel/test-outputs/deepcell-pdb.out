WARNING: finding a FAIR data distribution for a DeepCell
is only weakly reproducible.
To guarantee strong reproducibility:
- Use "DeepCell().define(DeepCell.find_distribution(...))" only in IPython 
  and then use ctx.save().
OR: 
- If you prefer to use load_project.py:define_graph, enter the following code:

    distribution = {
        "checksum": "eb377cf319b5dfa7651f41a09644c0d68934f8a8369998fdd82f003cfd5448f2",
        "keyorder": "3da0581cafcfb4b044419262474d6415317ff5863f7541ea0020ef7664cbfb85",
    }
    DeepCell().define(distribution)
    

Waiting for background tasks
Status: OK
None
eb377cf319b5dfa7651f41a09644c0d68934f8a8369998fdd82f003cfd5448f2
3da0581cafcfb4b044419262474d6415317ff5863f7541ea0020ef7664cbfb85

STAGE 2
2b0eeeac3bd3ba8d6e67aa262d9d2279dc672607af7a80414df10da1cb4f9cc2
data_1AVX
# 
_entry.id   1AVX 
# 
_audit_conform.dict_name       mmcif_pdbx.dic 
_audit_conform.dict_version    5.281 
_audit_conform.dict_location   http://mmcif.pdb.org/dictionaries/ascii/mmcif_pdbx

STAGE 3
e236e5d3967b18b6a23cf16db34164fbf09574f82cf3a905d79fae2da0d84ecc
data_1EER
# 
_entry.id   1EER 
# 
_audit_conform.dict_name       mmcif_pdbx.dic 
_audit_conform.dict_version    5.351 
_audit_conform.dict_location   http://mmcif.pdb.org/dictionaries/ascii/mmcif_pdbx
STAGE 4
