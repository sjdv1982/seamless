<?xml version="1.0" encoding="UTF-8"?>
  <docstring>
    Implementation of a coordinate system
     consisting of an origin and x,y and z axes
  </docstring>
  <methods>
    def __mul__(self,a):
      """Multiplication with either:
       a Float (scaling)
       a Coordinate (vector-matrix multiplication)
       or an AxisSystem (matrix-matrix multiplication)
      """
      types = (Float, Coordinate, AxisSystem)
      for t in types:
        try:
          a = t(a)
        except:
          continue
        break
      else:
        raise TypeError("Unknown type")
      if t is Float:
        ret = AxisSystem(self.origin, self.x*a, self.y*a, self.z*a)
        return ret
      if t is Coordinate:
        return t * self
      if t is AxisSystem:
        ret = AxisSystem()
        b = self
        ret.x = a.x * b.x.x + a.y * b.x.y + a.z * b.x.z
        ret.y = a.x * b.y.x + a.y * b.y.y + a.z * b.y.z
        ret.z = a.x * b.z.x + a.y * b.z.y + a.z * b.z.z
        ret.origin = a.x * b.origin.x + a.y * b.origin.y + a.z * b.origin.z + a.origin
        return ret
  </methods>
</xml>
